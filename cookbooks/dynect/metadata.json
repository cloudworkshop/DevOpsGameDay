{
    "maintainer_email": "cookbooks@opscode.com",
    "attributes": {
    },
    "conflicting": {
    },
    "dependencies": {
    },
    "providing": {
    },
    "replacing": {
    },
    "platforms": {
    },
    "license": "Apache 2.0",
    "version": "0.2.0",
    "groupings": {
    },
    "recommendations": {
    },
    "name": "dynect",
    "maintainer": "Opscode, Inc.",
    "description": "LWRP for managing DNS records with Dynect's REST API",
    "recipes": {
    },
    "suggestions": {
    },
    "long_description": "DESCRIPTION\n===========\n\nAutomatically configures system DNS using Dyn's API.\n\nREQUIREMENTS\n============\n\nChef 0.8+.\n\nA Dynect account.\n\nThe `dynect_rest` gem. The `dynect::default` recipe installs this gem from gemcutter.\n\nWorks on any platform Chef runs on that can install gems from Rubygems.org.\n\nATTRIBUTES\n==========\n\nThe following attributes need to be set either in a role or on a node directly, they are not set at the cookbook level:\n\n* dynect.customer - Customer ID\n* dynect.username - Username\n* dynect.password - Password\n* dynect.zone - Zone\n* dynect.domain - Domain\n\nExample JSON:\n\n    {\n      \"dynect\": {\n        \"customer\": \"CUSTOMER\",\n        \"username\": \"USERNAME\",\n        \"password\": \"PASSWORD\",\n        \"zone\": \"ZONE\",\n        \"domain\": \"DOMAIN\"\n      }\n    }\n\nEC2 specific attributes:\n\n* dynect.ec2.type - type of system, web, db, etc. Default is 'ec2'.\n* dynect.ec2.env - logical application environment the system is in. Default is 'prod'.\n\nRESOURCES\n=========\n\nrr\n--\n\nDNS Resource Record.\n\nActions:\n\nApplies to the DNS record being managed.\n\n* `:create`\n* `:replace`\n* `:update`\n* `:delete`\n\nAttribute Parameters:\n\n* `record_type` - DNS record type (CNAME, A, etc)\n* `rdata` - record data, see the Dyn API documentation.\n* `ttl` - time to live in seconds\n* `fqdn` - fully qualified domain name\n* `username` - dyn username\n* `password` - dyn password\n* `customer` - dyn customer id\n* `zone` - DNS zone\n\nNone of the parameters have default values.\n\nExample:\n\n    dynect_rr \"webprod\" do\n      record_type \"A\"\n      rdata({\"address\" => \"10.1.1.10\"})\n      fqdn \"webprod.#{node.dynect.domain}\"\n      customer node[:dynect][:customer]\n      username node[:dynect][:username]\n      password node[:dynect][:password]\n      zone     node[:dynect][:zone]\n    end\n\nRECIPES\n=======\n\nThis cookbook provides the following recipes.\n\ndefault\n-------\n\nThe default recipe installs Adam Jacob's `dynect_rest` gem during the Chef run's compile time to ensure it is available in the same run as utilizing the `dynect_rr` resource/provider.\n\nec2\n---\n\n**Only use this recipe on Amazon AWS EC2 hosts!**\n\nThe `dynect::ec2` recipe provides an example of working with the Dyn API with EC2 instances. It creates CNAME records based on the EC2 instance ID (`node.ec2.instance_id`), and a constructed hostname from the dynect.ec2 attributes.\n\nThe recipe also edits resolv.conf to search compute-1.internal and the dynect.domain and use dynect.domain as the default domain, and it will set the nodes hostname per the DNS settings.\n\na_record\n--------\n\nThe `dynect::a_record` recipe will create an `A` record for the node using the detected hostname and IP address from `ohai`.\n\nFURTHER READING\n===============\n\nInformation on the Dynect API:\n\n* [PDF](http://cdn.dyndns.com/pdf/Dynect-API.pdf)\n\nDynect REST Ruby Library:\n\n* [Gem](http://rubygems.org/gems/dynect_rest)\n* [Code](http://github.com/adamhjk/dynect_rest)\n\nLICENSE AND AUTHOR\n==================\n\n- Author: Adam Jacob (<adam@opscode.com>)\n- Copyright: 2010, Opscode, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
  }